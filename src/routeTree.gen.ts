/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ClientImport } from './routes/client'
import { Route as AdminImport } from './routes/admin'

// Create/Update Routes

const ClientRoute = ClientImport.update({
  id: '/client',
  path: '/client',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/client': {
      id: '/client'
      path: '/client'
      fullPath: '/client'
      preLoaderRoute: typeof ClientImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRoute
  '/client': typeof ClientRoute
}

export interface FileRoutesByTo {
  '/admin': typeof AdminRoute
  '/client': typeof ClientRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/admin': typeof AdminRoute
  '/client': typeof ClientRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/admin' | '/client'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin' | '/client'
  id: '__root__' | '/admin' | '/client'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRoute
  ClientRoute: typeof ClientRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRoute,
  ClientRoute: ClientRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/admin",
        "/client"
      ]
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/client": {
      "filePath": "client.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
